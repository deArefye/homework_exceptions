class ExceptionAmoungArguments(Exception):
  def __init__(self, text):
    self.txt = text

def calculate():
  
  request = (input('Введите тип вычисления и 2 числа для вычисления(между знаком вычисления и числами ставьте пробелы: '))
  request_l = request.split(' ')
  # print(request_l) проверка для себя

  assert request_l[0] in ['+', '-', '*', '/' ], f'Операция {request_l[0]} не поддерживается.' #Проверяем поддерживается ли введенная пользователем арифметическая операция 

  try:
    x = int(request_l[1]) #переменные x и y ввожу в блок try, чтобы ловить ValueError
    y = int(request_l[2])
    
    if len(request_l) != 3:
      raise ExceptionAmoungArguments('Задано неверное количество аргументов')
    elif request_l[0] == '+':
      print('ответ равен: ', x + y)
    elif request_l[0] == '-':
      print('ответ равен: ', x - y)
    elif request_l[0] == '*':
      print('ответ равен: ', x * y)
    elif request_l[0] == '/':
      print('ответ равен: ', round(x / y, 2))
  except ZeroDivisionError:
    print ('Деление на ноль запрещено')
  except ValueError:
    print('Ошибка с выбором типа данных для одного или обоих аргументов - вычисления возможны только с числами.')
  except ExceptionAmoungArguments as notification:
    print(notification)

calculate()
